tesst
#ham dem so pt trong mien gia tri cuoi cung
    # def demSopt(giolist,col,lengio):
    #     count = 0
    #     if 
    #     for x in range(1,nrow):
    #         if(float(data[x][col])<=giolist[1] and float(data[x][col])>=giolist[0]):
    #             count += 1
    #     return count
    #ham 
    def chiaMiengiatri(col,sogio):
        gioList = []
        array = sapxepMang(col)
        lengio = int(nrow/sogio) #so luong cua 1 gio
        if (nrow%sogio !=0):
            lengio +=1
        #chia gio
        for z in range(0,sogio-1):
            gioListChild = [array[(z)*lengio], array[(lengio)*(z+1)-1]]
            gioList.append(gioListChild)
            a = array[(lengio)*(z+1)]
        gioListChild = [a,array[len(array)-1]]
        gioList.append(gioListChild)
        return gioList
 
    #chia theo do sau:
    def discretizeTheoDoSau(sogio):
        lengio = int(nrow/sogio) #so luong cua 1 gio
        if (nrow%sogio !=0):
            lengio +=1
        print(lengio)
         #ghi file log
        for col in range(0,ncol):
            giolist = chiaMiengiatri(col,sogio)
            print(giolist)
            if (checkDataTypeOfCol(col) == 'numeric'):  
                log_file.write('Thuoc tinh: ' + data[0][col] + ', ')
                for x in range(0,len(giolist)):
                    dem=lengio
                    log_file.write('['+str(giolist[x][0])+','+str(giolist[x][1])+']: '+str(dem)+', ')
            else:
                log_file.write(data[x][y])
                if (y < ncol - 1):
                    log_file.write(',')
                log_file.write('\n')   
        #ghi file output
        
        for y in range(0,ncol):
            output_file.write(data[0][y])
            if (y < ncol - 1):
                output_file.write(',')
        output_file.write('\n')
        for x in range(1,nrow):
            for y in range(0,ncol):
                if (checkDataTypeOfCol(y) == 'numeric'):
                    gio = chiaMiengiatri(y,sogio)
                    for z in range(0, len(gio)):
                        
                        if (float(data[x][y]) <= gio[z][1] and float(data[x][y]) >= gio[z][0]):
                            output_file.write('['+str(array[(z)*lengio])+','+str(array[(lengio)*(z+1)-1])+'],')
                            break
                else:
                    output_file.write(data[x][y])
                    if (y < ncol - 1):
                        output_file.write(',')
            output_file.write('\n')
           